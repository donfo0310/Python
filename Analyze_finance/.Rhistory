print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', colnames(master.SIC[1:6]), ']') )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste(colnames(master.SIC[1:6]), ']')) )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste(colnames(master.SIC[1:6]), ']')) )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste(colnames(master.SIC[,1:6]), ']')) )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste(colnames(master.SIC[,1:6]), ']')) )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste0(colnames(master.SIC[,1:6]), ']')) )
colnames(master.SIC[,1:6])
colnames(master.SIC[,1:])
colnames(master.SIC[1:])
colnames(master.SIC[1:6])
paste(colnames(master.SIC[1:6]))
paste(colnames(master.SIC[1:6]),',')
cbind(colnames(master.SIC[1:6]))
rbind(colnames(master.SIC[1:6]))
paste(rbind(colnames(master.SIC[1:6])))
master.SIC.mkt.name
master.SIC.日付
master.SIC$mkt.name
paste("A",colnames(master.SIC),sep="$", collapse=" + ")
paste(colnames(master.SIC), collapse=" + ")
paste(colnames(master.SIC), collapse=", ")
paste(colnames(master.SIC), collapse=",")
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']') )
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
library("curl", lib.loc="C:/Program Files/Microsoft/R Client/R_SERVER/library")
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
#[1] "master.SIC 7936 6[mkt.name,日付,コード,銘柄名,市場.商品区分,X33業種コード]"
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# 数字から始まる項目名には勝手にXがつくようだ。それを削除している
colnames(master.SIC) <- sub("X","",colnames(master.SIC))
rm(list=c("i", "mkt.name", ls(pattern = "tmp*"))) # cleanup
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
#[1] "master.SIC 7936 6[mkt.name,日付,コード,銘柄名,市場.商品区分,X33業種コード]"
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# 数字から始まる項目名には勝手にXがつくようだ。それを削除している
colnames(master.SIC) <- sub("X","",colnames(master.SIC))
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
#[1] "master.SIC 7936 6[mkt.name,日付,コード,銘柄名,市場.商品区分,X33業種コード]"
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# 数字から始まる項目名には勝手にXがつくようだ。それを削除している
colnames(master.SIC) <- sub("X","",colnames(master.SIC))
rm(list=c("i", "mkt.name", ls(pattern = "tmp*"))) # cleanup
# Output Securities-Code
write.table(master.SIC, "./master/master_SIC.txt", sep = "\t", col.names = TRUE, row.names = TRUE)
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
#[1] "master.SIC 7936 6[mkt.name,日付,コード,銘柄名,市場.商品区分,X33業種コード]"
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# 数字から始まる項目名には勝手にXがつくようだ。それを削除している
colnames(master.SIC) <- sub("X","",colnames(master.SIC))
rm(list=c("i", "mkt.name", ls(pattern = "tmp*"))) # cleanup
# Output Securities-Code
write.table(master.SIC, "./master/master_SIC.txt", sep = "\t", col.names = TRUE, row.names = TRUE, fileEncoding = "UTF-8-BOM")
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
#[1] "master.SIC 7936 6[mkt.name,日付,コード,銘柄名,市場.商品区分,X33業種コード]"
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# 数字から始まる項目名には勝手にXがつくようだ。それを削除している
colnames(master.SIC) <- sub("X","",colnames(master.SIC))
rm(list=c("i", "mkt.name", ls(pattern = "tmp*"))) # cleanup
# Output Securities-Code
write.table(master.SIC, "./master/master_SIC.txt", sep = "\t", col.names = TRUE, row.names = TRUE, fileEncoding = "UTF-8")
# RでXBRLデータを取得してみた
# http://horihorio.hatenablog.com/entry/2014/12/15/235107
# 作業スペースの全オブジェクトを消す（全て消すときはrm(list = ls())）
rm(list=ls())
# 関数 invisible() を使うことで，関数 gc() の実行結果を表示しないようにする。
# 直前の結果を保存している隠しオブジェクト.Last.valueが大きい場合、gc()を2回連続で行なうとよい。
invisible(gc()); invisible(gc())
# library
library("RCurl")
library("XML")
library("plyr")
# Get Securities-Code
# 市場第一部 （内国株）:TSE1
# 市場第二部:TSE2
# マザーズ （内国株）:Mothers
# JASDAQ(グロース）:JQG
# JASDAQ（スタンダード）: JQS
# master ディレクトリのcsvをすべて取得
setwd("D:\\OneDrive\\ドキュメント\\Project\\Python\\Analyze_finance")
tmp.list <- paste0("./master/", dir("./master/", pattern = "*.csv") )
# SIC ... Standard Industrial Classification 産業分類コード
tmp.master.SIC <- list()
master.SIC     <- c()
# marged csv-path list
for (i in 1:length(tmp.list)) {
mkt.name <- sub(".csv", "", unlist(strsplit(tmp.list[i], "/"))[3])  # ex.TSE1
tmp.master.SIC[[i]] <- read.csv(tmp.list[i], header = TRUE, stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM") # stringsAsFactors:カテゴリ変換しません
print(paste(mkt.name, nrow(tmp.master.SIC[[i]]), ncol(tmp.master.SIC[[i]])))
tmp.master.SIC[[i]] <- cbind( mkt.name, tmp.master.SIC[[i]] ) # 市場名とくっつける
master.SIC <- rbind(master.SIC, tmp.master.SIC[[i]][1:6])
}
#[1] "master.SIC 7936 6[mkt.name,日付,コード,銘柄名,市場.商品区分,X33業種コード]"
print(paste('master.SIC', nrow(master.SIC), paste0(ncol(master.SIC), '[', paste(colnames(master.SIC), collapse=","), ']')) )
# 数字から始まる項目名には勝手にXがつくようだ。それを削除している
colnames(master.SIC) <- sub("X","",colnames(master.SIC))
rm(list=c("i", "mkt.name", ls(pattern = "tmp*"))) # cleanup
# Output Securities-Code（master_SIC.txtという名前で中間出力する）
write.table(master.SIC, "./master/master_SIC.txt", sep = "\t", col.names = TRUE, row.names = TRUE, fileEncoding = "UTF-8")
# Get XBRL
# Get Ready
# Securities-Code As Query param
SICs <- as.character(master.SIC$コード) #SIC.code
## Download XBRL files to 'data' folder
# Create folder.
dir.create("data")
# Set Const
api.service.url <- "http://resource.ufocatch.com/atom/edinetx" # API-URI
# ########################
# ここまで読解終わってます
# ########################
# set date from-to
date.from <- as.Date('2013/6/1')
date.to   <- as.Date('2013/6/30')
